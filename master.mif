# 4OS2 master makefile

# Tools setup

cc = wcc386
as = wasm
link = wlink

# Build flags

# 20090430 AB added -ef, used for 'jump to error' in VisualSlickEdit (-ef doesn't work with OW1.7!)
cflags = -zq -wx -we -ef -I..\h -I$(%WATCOM)\h\os2
aflags = -zq
lflags =

!ifdef debug
cflags += -d2
cflags += -d__DEBUG__
aflags += -d2
lflags += debug all
!else
cflags += -oaxt
!endif

# 20100111 AB added pmprintf / trace via enviroment setting
# set pmprintf in your enviroment to enable output to pmprintf (f.i. set pmprintf=1)
!ifdef %pmprintf
cflags += -d__DEBUG_PMPRINTF__
lflags += lib pmprintf.lib
!endif

# File locations

.c: ../c
.h: ../h
.asm: ../a

# Implicit build rules

.c.obj: .autodepend
   $(cc) $(cflags) $[@

.asm.obj
   $(as) $(aflags) $[@

# Targets and explicit rules

all : 4os2.exe jpos2dll.dll option2.exe shralias.exe keystack.exe &
      4os2h.msg 4os2.inf

4os2objs = main.obj parser.obj os2init.obj cmds.obj expand.obj eval.obj &
           ea.obj dircmds.obj filecmds.obj syscmds.obj os2cmds.obj      &
           os2calls.obj misc.obj env.obj batch.obj screenio.obj msg.obj &
           error.obj window.obj listall.obj lines.obj kparse.obj        &
           iofmt32.obj select.obj os2tty.obj istring.obj iparse.obj     &
           bcd32.obj os32util.obj dbcs.obj wrappers.obj

4os2.exe : $(4os2objs) 4os2.res ..\4os2.wlk vdm2os2.exe ..\buildlevel.txt
    $(link) $(lflags) @..\4os2.wlk file { $(4os2objs) }
#   msgbind msgfile
    wrc -q 4os2.res $@

4os2.res : ..\4os2.rc ..\4os2.ico
    wrc -q -r -zm -bt=os2 -fo=$@ ..\4os2.rc $@

opt2objs = option2.obj os2cfg.obj os2nb.obj istring.obj

option2.exe : $(opt2objs) option2.res ..\option2.wlk ..\buildlevel.txt
    $(link) $(lflags) @..\option2.wlk file { $(opt2objs) }
    wrc -q option2.res $@

option2.res : ..\option2.rc ..\option2.dlg ..\4os2.ico resource.h
    wrc -q -r -zm -bt=os2 -I=$(%WATCOM)\h\os2 -fo=$@ ..\option2.rc

jpdllobjs = jpos2dll.obj

jpos2dll.dll : $(jpdllobjs) ..\jpos2dll.wlk ..\buildlevel.txt
    $(link) $(lflags) @..\jpos2dll.wlk file { $(jpdllobjs) }

shraobjs = shralias.obj

shralias.exe : $(shraobjs) ..\shralias.wlk ..\buildlevel.txt
    $(link) $(lflags) @..\shralias.wlk file { $(shraobjs) }

kstackobjs = keystack.obj

keystack.exe : $(kstackobjs) ..\keystack.wlk ..\buildlevel.txt
    $(link) $(lflags) @..\keystack.wlk file { $(kstackobjs) }

vdm2os2.exe : vdm2os2.c
    wcl -zq -Lr $<

4os2h.msg : ..\4os2h.txt
    mkmsgf $< $@

4os2.inf : ..\4os2.ipf
#    ipfc -i -D:1 -C:850 -L:ENU $< $@
    wipfc -i -l en_US $< -o $@
..\buildlevel.txt : msg.obj
    ..\make_buildlevel.cmd

# lxlite executables

lxlite: .symbolic 4os2.exe keystack.exe option2.exe shralias.exe jpos2dll.dll
    @if exist 4os2.exe lxlite -X- -B- 4os2.exe
    @if exist keystack.exe lxlite -X- -B- keystack.exe
    @if exist option2.exe lxlite -X- -B- option2.exe
    @if exist shralias.exe lxlite -X- -B- shralias.exe
    @if exist jpos2dll.dll lxlite -X- -B- jpos2dll.dll

# Clean target

clean : .symbolic
    @if exist *.obj del *.obj
    @if exist *.exe del *.exe
    @if exist *.dll del *.dll
    @if exist *.res del *.res
    @if exist *.msg del *.msg
    @if exist *.inf del *.inf
    @if exist *.map del *.map
